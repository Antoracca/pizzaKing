rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    // Users collection
    match /users/{userId} {
      // Anyone can read any user (for public profiles, leaderboards, etc.)
      allow read: if true;

      // Users can create their own document during signup
      allow create: if isSignedIn() && request.auth.uid == userId;

      // Users can update their own document, admins can update any
      allow update: if isOwner(userId) || isAdmin();

      // Only admins can delete users
      allow delete: if isAdmin();
    }

    // Pizzas collection
    match /pizzas/{pizzaId} {
      // Anyone can read pizzas
      allow read: if true;

      // Only admins can create, update, or delete pizzas
      allow write: if isAdmin();
    }

    // Orders collection
    match /orders/{orderId} {
      // Users can read their own orders, deliverers can read assigned orders, admins can read all
      allow read: if isSignedIn() && (
        resource.data.userId == request.auth.uid ||
        resource.data.delivererId == request.auth.uid ||
        isAdmin()
      );

      // Users can create their own orders
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;

      // Users can update their own orders (for cancellation), deliverers can update assigned orders, admins can update all
      allow update: if isSignedIn() && (
        resource.data.userId == request.auth.uid ||
        resource.data.delivererId == request.auth.uid ||
        isAdmin()
      );

      // Only admins can delete orders
      allow delete: if isAdmin();
    }

    // Addresses collection
    match /addresses/{addressId} {
      // Users can read their own addresses
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;

      // Users can create their own addresses
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;

      // Users can update and delete their own addresses
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // Promotions collection
    match /promotions/{promoId} {
      // Anyone can read active promotions
      allow read: if true;

      // Only admins can write promotions
      allow write: if isAdmin();
    }

    // Reviews collection
    match /reviews/{reviewId} {
      // Anyone can read reviews
      allow read: if true;

      // Users can create reviews for their own orders
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;

      // Users can update/delete their own reviews, admins can moderate
      allow update, delete: if isSignedIn() && (
        resource.data.userId == request.auth.uid ||
        isAdmin()
      );
    }

    // Notifications collection
    match /notifications/{notificationId} {
      // Users can read their own notifications
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;

      // System and admins can create notifications
      allow create: if isAdmin();

      // Users can update their own notifications (mark as read)
      allow update: if isSignedIn() && resource.data.userId == request.auth.uid;

      // Users can delete their own notifications
      allow delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }
  }
}
