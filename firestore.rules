rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isValidProvider() {
      return request.resource.data.provider in ['password', 'google'];
    }

    function isValidRole() {
      return request.resource.data.role == 'customer';
    }

    function preservesImmutableFields() {
      return request.resource.data.createdAt == resource.data.createdAt
        && request.resource.data.referralCode == resource.data.referralCode
        && request.resource.data.role == resource.data.role
        && request.resource.data.provider == resource.data.provider;
    }

    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false;

      allow create: if isSignedIn()
        && request.auth.uid == userId
        && request.resource.data.id == userId
        && request.resource.data.email == request.auth.token.email
        && isValidProvider()
        && isValidRole();

      allow update: if isOwner(userId)
        && preservesImmutableFields();

      allow delete: if false;
    }
  }
}
